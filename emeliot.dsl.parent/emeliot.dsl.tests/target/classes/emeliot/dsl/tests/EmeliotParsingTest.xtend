/*
 * generated by Xtext 2.36.0
 */
package emeliot.dsl.tests

import com.google.inject.Inject
import emeliot.dsl.read.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(EmeliotInjectorProvider)
class EmeliotParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			model EmeliotTest:
				mutation FirstMutation "fullpath" java.lang.Integer {
					read()
					var a = "asd"
					val i = 0;
					
					addMultipleRandomTimeValues("",5,5,5,5,5);
					
				}
				mutation SicondMutation "secondFullPath" java.lang.Float {
					read("");
					addTimeAndRandomValue("",6, 6,6);
				} 
				mutation TirthMutation "anotherFullPath" java.lang.Boolean{
					read("anotherFullPath")
				}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
